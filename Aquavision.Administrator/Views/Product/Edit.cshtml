@model Aquavision.Data.Models.Product
<script>
	function ProductOptionGroupModal(Id, GroupName) {
		$("#GroupId").val("0");
		$("#ProductOptionGroupName").val("");
		$("#btnProductOptionGroup").text("Add");
		if (Id != 0) {
			$("#GroupId").val(Id);
			$("#ProductOptionGroupName").val(GroupName);
			$("#btnProductOptionGroup").text("Edit");
		}

	}
function deleteProductGroup(id, e) {
		e.preventDefault();
		$.confirm({
			title: 'Delete Product Group',
			content: 'Are you sure to delete group?',
			icon: 'fa fa-question-circle',
			animation: 'scale',
			closeAnimation: 'scale',
			opacity: 0.5,
			buttons: {
				'confirm': {
					text: 'Delete',
					btnClass: 'btn-red',
					action: function () {
						location.href = `@Url.Action("DeleteProductGroup", "Product")/${id}`;
					}
				},
				cancel: function () {
					return true;
				}
			}
		});
		e.stopPropagation();
		return false;
	}
</script>
<div class="row">
	<div class="col-md-6">
		<div class="portlet">
			<div class="portlet-title">
				<div class="caption">
					<i class="fa fa-square"></i>Edit Product
				</div>
			</div>
			<div class="portlet-body form">
				@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { @class = "form-horizontal" })) {
					@Html.HiddenFor(model => model.Id)
					<div class="form-body">
						<div class="form-group">
							@Html.LabelFor(model => model.CategoryId, "Category", new { @class = "control-label col-md-3" })
							<div class="col-md-9">
								@Html.DropDownList("CategoryId", null, "", new { @class = "form-control col-md-3", style = "width: 300px;", @required = "required" })
								@Html.ValidationMessageFor(model => model.CategoryId)
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Name, new { @class = "control-label col-md-3" })
							<div class="col-md-9">
								<input class="form-control" id="Name" name="Name" type="text" value="@Model.Name" required />
								@Html.ValidationMessageFor(model => model.Name)
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.SKU, "SKU", new { @class = "control-label col-md-3" })
							<div class="col-md-9">
								<input class="form-control" id="SKU" name="SKU" value="@Model.SKU" type="text" required />
								@Html.ValidationMessageFor(model => model.SKU)
							</div>
						</div>

						@*<div class="form-group">
								<label class="control-label col-md-3">Product Image</label>
								<div class="col-md-9">
									<img src="@(Model.GetProductImage())" style="width:100px;">
									[<a>Edit</a> | <a>Remove</a>]
								</div>
							</div>*@
					</div>
					<div class="form-actions fluid">
						<div class="col-md-offset-3 col-md-9">
							<button type="submit" class="btn blue">Save Changes</button>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<div class="portlet">
			<div class="portlet-title">
				<div class="caption">
					<i class="fa fa-square"></i>Product Option Group
				</div>
				<div class="actions">
					<a data-toggle="modal" data-target="#ProductOptionGroupModel" onclick="ProductOptionGroupModal(0,'');" class="btn default yellow-stripe">
						<i class="fas fa-th"></i>
						Add Option Group
					</a>
				</div>
			</div>
			<div class="portlet-body">
				<div class="table-container">
					<table class="table table-striped table-bordered table-hover">
						<tr>
							<th>Name</th>
							<th>Number Of Options</th>
							<th></th>
						</tr>
						@if (Model.ProductOptionGroups.Any()) {
							foreach (var productOptionGroup in Model.ProductOptionGroups) {
								<tr>
									<td>@productOptionGroup.Name</td>
									<td>@productOptionGroup.ProductOptions.Count()</td>
									<td>
										<a title="Product Options" href="@Url.Action("ProductOptions", new { productGroupId = productOptionGroup.Id, productId = productOptionGroup.ProductId })" class="fa fa-tag btn yellow" style="width: 40px;"></a>
										<a data-toggle="modal" data-target="#ProductOptionGroupModel" title="Edit" onclick="ProductOptionGroupModal(@productOptionGroup.Id,'@productOptionGroup.Name');" class="fa fa-edit btn blue" style="width: 40px;"></a>
										<a title="Delete" href="#" onclick="deleteProductGroup(@productOptionGroup.Id, event);return false;" class="fa fa-times btn red" style="width: 40px;"></a>
									</td>
								</tr>
							}
						} else { <tr><td colspan="3">No Option Group</td></tr>}

					</table>
				</div>
			</div>
		</div>
	</div>
</div>
<div id="ProductOptionGroupModel" class="modal container fade" tabindex="-1" data-backdrop="static" data-keyboard="false" data-attention-animation="false">
	@using (Html.BeginForm("ProductOptionGroup", "Product", FormMethod.Post, new { @class = "form-horizontal" })) {
		@Html.HiddenFor(model => model.Id)
		<input type="hidden" name="GroupId" id="GroupId" value="0" />
		<div class="modal-header">
			<h3>Product Option Group</h3>
		</div>
		<div class="modal-body form-body">
			<div class="form-group">
				<label for="Name" class="col-md-3 control-label">Name</label>
				<div class="col-md-4">
					<div class="input-group">
						<input type="text" id="ProductOptionGroupName" name="ProductOptionGroupName" class="form-control" required />
					</div>
				</div>
			</div>
		</div>
		<div class="modal-footer">
			<button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
			<button type="submit" class="btn blue" id="btnProductOptionGroup">Add</button>
		</div>
	}
</div>